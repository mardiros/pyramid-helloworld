FROM debian:bookworm-slim AS build-env

ENV PATH /usr/local/bin:$PATH
ENV PYTHONPATH=/usr/local/lib/python3.11/dist-packages:/usr/lib/python3.11/dist-packages
ENV LANG C.UTF-8
ENV PYTHONDONTWRITEBYTECODE=1
ENV POETRY_VIRTUALENVS_CREATE=false

RUN apt-get update && \
    apt-get install --no-install-recommends -y  \
    libffi-dev \
    python3-dev \
    python3-setuptools \
    python3-pip \
    git \
    curl


RUN curl -sSL https://install.python-poetry.org | python3 -

ENV PATH="/root/.local/bin:$PATH"

WORKDIR /app

COPY pyproject.toml /app/pyproject.toml
COPY poetry.lock /app/poetry.lock

# now we will use pip to install everything under /usr/local to prepare
# the local environment, poetry looks not able to do it by itself.
RUN poetry config warnings.export false && \
    poetry export --with uwsgi --format  requirements.txt -o requirements.txt --without-hashes && \
    pip install \
    --force-reinstall  \
    --no-cache-dir \
    --no-deps \
    --prefix=/usr/local \
    -r requirements.txt

COPY . /app

# it stays don't write bytecode, but wheels contains byte codes.
RUN find /usr/local/lib/python3.*/dist-packages  -name "__pycache__" -exec rm -rf {} +

FROM debian:bookworm-slim

ENV PATH /usr/local/bin:$PATH
ENV LANG C.UTF-8
ENV PYTHONDONTWRITEBYTECODE=1

RUN apt-get update  && \
    apt-get install --no-install-recommends -y  \
    python3 \
    uwsgi \
    uwsgi-plugin-python3 && \
    groupadd -g 1000 app && \
    useradd -m -u 1000 -g app app && \
    apt-get clean

COPY --from=build-env /usr/local/lib/python3.11/dist-packages /usr/local/lib/python3.11/dist-packages
COPY --from=build-env /usr/local/bin /usr/local/bin

COPY --from=build-env /app /app
WORKDIR /app

# ENTRYPOINT ["/docker-entrypoint.sh"]

USER 1000:1000
ENV UWSGI_WORKERS 2
ENV UWSGI_HARAKIRI 30
ENV UWSGI_BUFFERSIZE 32768
ENV UWSGI_LOGFORMAT '{"source": "uwsgi", "type": "request", "method": "%(method)", "status": "%(status)", "path": "%(uri)", "user_agent": "%(uagent)", "duration_in_ms": %(msecs), "referer": "%(referer)", "host": "%(host)", "time": %(time), "remote_ip": "%(var.HTTP_X_FORWARDED_FOR)"}'
ENV UWSGI_WORKERS 2
ENV UWSGI_EXTRAS ""

ENV CONFIG "/app/development.yaml"

ENV PYTHONPATH=/usr/local/lib/python3.11/dist-packages:/app


EXPOSE 6543
CMD /usr/sbin/uwsgi \
    --plugin=python3 \
    -M \
    --workers=$UWSGI_WORKERS \
    --enable-threads \
    --http-socket=0.0.0.0:6543 \
    --buffer-size=$UWSGI_BUFFERSIZE \
    --harakiri=$UWSGI_HARAKIRI \
    --log-format="$UWSGI_LOGFORMAT" \
    --module=plasted:app \
    $UWSGI_EXTRAS
